/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class RightSideView {
    public List<Integer> rightSideView(TreeNode root) {
        if(root == null) {
            return new ArrayList<>();
        }
        List<Integer> result = new ArrayList<>();
        Queue<Pair> queue = new LinkedList<>();
        
        queue.add(new Pair(root, 0));
        int level = 0;
        while(!queue.isEmpty()){
            Pair<TreeNode, Integer> p = queue.remove();
            if (p.getValue() == level) {
                result.add(p.getKey().val);
                level++;
            }
            TreeNode node = p.getKey();   
    
            if (node.right != null){
                queue.add(new Pair(node.right, p.getValue() +1));
            }
            
            if (node.left != null){
                queue.add(new Pair(node.left, p.getValue() + 1));
            }
        }
         return result;
    }
}
